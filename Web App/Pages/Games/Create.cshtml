@page
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Web_App.Pages.Games.CreateModel
@{
    ViewData["Title"] = "Create Game";
}

<div class="container">
    <div class="card shadow-sm">
        <div class="card-header">
            <h2 class="mb-0">Create New Game</h2>
        </div>
        <div class="card-body">
            <form method="post">
                <div class="row g-3">
                    <div class="col-md-6">
                        <label asp-for="Game.HomeTeam" class="form-label">Home Team</label>
                        <select asp-for="Game.HomeTeam" class="form-select" asp-items="Model.TeamsList" required>
                            <option value="">Select Home Team</option>
                        </select>
                        <span asp-validation-for="Game.HomeTeam" class="text-danger"></span>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="Game.AwayTeam" class="form-label">Away Team</label>
                        <select asp-for="Game.AwayTeam" class="form-select" asp-items="Model.TeamsList" required>
                            <option value="">Select Away Team</option>
                        </select>
                        <span asp-validation-for="Game.AwayTeam" class="text-danger"></span>
                    </div>

                    <div class="col-md-4">
                        <label asp-for="Game.Date" class="form-label">Game Date</label>
                        <input asp-for="Game.Date"
                               type="date"
                               class="form-control"
                               required
                               value="@DateTime.Today.ToString("yyyy-MM-dd")"
                               min="1753-01-01"
                               max="9999-12-31" />
                        <span asp-validation-for="Game.Date" class="text-danger"></span>
                    </div>

                    <div class="col-md-4">
                        <label asp-for="Game.Week" class="form-label">Week</label>
                        <input asp-for="Game.Week" type="number" class="form-control" required min="1" />
                        <span asp-validation-for="Game.Week" class="text-danger"></span>
                    </div>

                    <div class="col-md-4">
                        <label asp-for="Game.HomeTeamScore" class="form-label">Home Team Score</label>
                        <input asp-for="Game.HomeTeamScore" type="number" class="form-control" required min="0" />
                        <span asp-validation-for="Game.HomeTeamScore" class="text-danger"></span>
                    </div>

                    <div class="col-md-4">
                        <label asp-for="Game.AwayTeamScore" class="form-label">Away Team Score</label>
                        <input asp-for="Game.AwayTeamScore" type="number" class="form-control" required min="0" />
                        <span asp-validation-for="Game.AwayTeamScore" class="text-danger"></span>
                    </div>

                    <div class="col-12">
                        <button type="submit" class="btn btn-primary">Create Game</button>
                        <a asp-page="./Games" class="btn btn-secondary">Back to List</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Add client-side validation to ensure home team and away team are different
        document.querySelector('form').addEventListener('submit', function (e) {
            const homeTeam = document.getElementById('@Html.IdFor(m => m.Game.HomeTeam)').value;
            const awayTeam = document.getElementById('@Html.IdFor(m => m.Game.AwayTeam)').value;

            if (homeTeam === awayTeam && homeTeam !== '') {
                e.preventDefault();
                alert('Home Team and Away Team cannot be the same!');
            }
        });
    </script>
}